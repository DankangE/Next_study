{
  // typeScript 컴파일러의 옵션들을 지정하는 속성
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],  /* 컴파일 과정에 사용될 라이브러리 파일 설정 */
    "allowJs": true, /* JavaScript 파일 컴파일 허용 */
    "skipLibCheck": true, /* 선언 파일 유형 검사 스킵 */
    "strict": true, /* 모든 엄격한 유형 검사 옵션 활성화 */
    "noEmit": true, /* 출력 방출(emit) 유무 설정 */
    "esModuleInterop": true, /* 모든 가져오기에 대한 네임스페이스 객체 생성을 통해 CommonJS와 ES 모듈 간의 상호 운용성을 제공. 'allowSyntheticDefaultImports' 암시 */
    "module": "esnext", /* 생성될 모듈 코드 설정: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "moduleResolution": "bundler", /* 모듈 분석 방법 설정: 'node' (Node.js) 또는 'classic' (TypeScript pre-1.6). */
    "resolveJsonModule": true, // ts 파일에서 json imoprt 허용
    "isolatedModules": true, /* 각 파일을 별도 모듈로 변환 ('ts.transpileModule'과 유사) */
    "jsx": "preserve", /* 생성될 JSX 코드 설정: 'preserve', 'react-native', or 'react'. */
    "incremental": true, /* 증분 컴파일 활성화 */
    "plugins": [
      {
        "name": "next"
      }
    ],
    "baseUrl": "/src",
    "paths": {
      "@/*": ["./*"]
    }
  },
  // 컴파일할 파일들을 지정하는 속성
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  // 컴파일 대상에서 제외할 파일들을 지정하는 속성
  "exclude": ["node_modules"]
}
